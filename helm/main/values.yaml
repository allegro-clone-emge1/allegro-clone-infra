api:
  replicaCount: 2

  image:
    repository: api
    pullPolicy: Never
    tag: dev

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: ""

  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
  podLabels:
    app.kubernetes.io/component: api

  podSecurityContext:
   fsGroup: 2000

  securityContext:
    # capabilities:
    #   drop:
    #   - ALL
    runAsUser: 1000
    runAsGroup: 3000
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false

  service:
    type: ClusterIP
    port: 8000

  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      nginx.ingress.kubernetes.io/limit-connections: "20"
      nginx.ingress.kubernetes.io/limit-rps: "10"
      nginx.ingress.kubernetes.io/limit-rpm: "100"
    hosts:
      - host: api.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - hosts:
          - api.local
        secretName: api-tls

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
  # targetMemoryUtilizationPercentage: 80

  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

ui:
